{"/arduino/Arduino导航.html":{"title":"Arduino导航","content":" title: Arduino导航 [Arduino官网](https://www.arduino.cc/) [Arduino中文社区](https://www.arduino.cn/) [DFRobot官网](https://www.dfrobot.com.cn/) [面包板社区](https://mbb.eet china.com/) [Arduino教程 Arduino中文社区](https://www.arduino.cn/thread 1066 1 1.html) [Arduino常用函数参考](https://wiki.arduino.cn/?file home 首页) [Arduino教程 DF创客社区](https://mc.dfrobot.com.cn/thread 273351 1 1.html) [Arduino编程参考手册 DFRobot](https://wiki.dfrobot.com.cn/Arduino编程参考手册) [Arduino 教程 太极创客](http://www.taichi maker.com/homepage/arduino basic tutorial index/) [Arduino 教程 w3cschool](https://www.w3cschool.cn/arduino/) [Mixly官网](http://mixly.org/) [Mixly Wiki](https://mixly.readthedocs.io/zh_CN/latest/contents.html#)"},"/arduino/HC-05蓝牙模块.html":{"title":"HC-05蓝牙模块","content":" title: HC 05蓝牙模块 categories: Arduino # HC 05蓝牙模块 ## 参数 VCC 模块供电5V GND 接地 TXD: 模块串口发送脚 RXD: 模块串口接收脚 ## 接线 TXD 0 RXD 1 ## 代码 ```c volatile char item; //定义变量 void setup(){ item 0; //变量赋值为0 Serial.begin(9600); //串口比特率为9600 pinMode(13, OUTPUT); //定义13号管脚为输出管脚 } void loop(){ if (Serial.available() > 0) { item Serial.read(); //如果串口有读取数据，则将变量赋值为所读取数据 switch (item) { case 'A': digitalWrite(13,HIGH); //读取数据为A，13号管脚输出高电平 break; case 'B': digitalWrite(13,LOW); //读取数据为B，13号管脚输出低电平 break; } } } ``` ## 功能 当蓝牙模块接受到数据A则13号管脚输出高电平，板载灯亮起，接受到数据B则相反. ## 参考 [1]"},"/arduino/ULN2003电机驱动模块.html":{"title":"ULN2003电机驱动模块","content":" title: ULN2003电机驱动模块 categories: Arduino # ULN2003电机驱动模块 ## 参数 **28BYJ 48步进电机** 外径28毫米四相八拍式永磁减速型步进电机 VCC 模块供电5V GND 接地 ## 接线 IN 8 IN2 9 IN3 10 IN4 11 VCC VCC IGBD GND ## 代码 ```c //使用arduino IDE自带的Stepper.h库文件 #include <Stepper.h> // 这里设置步进电机旋转一圈是多少步 const int stepsPerRevolution 90; #define STEPS 100 //设置步进电机的步数和引脚（就是注意点2里面说的驱动板上IN1～IN4连接的四个数字口）。 Stepper stepper(STEPS, 8, 9, 10, 11); void setup() { // 设置电机的转速：每分钟为90步 stepper.setSpeed(90); } void loop() { // 顺时针旋转一周 stepper.step(2048); //4步模式下旋转一周用2048 步。 delay(500); // 逆时针旋转半周 stepper.step( 1024); //4步模式下旋转一周用2048 步。 delay(500); } ``` ## 功能 驱动电机顺时针旋转一周后逆时针旋转半周，如此循环往复 ## 参考 [1]"},"/arduino/玩转LED.html":{"title":"玩转LED","content":" title: 玩转LED categories: Arduino # 玩转LED ## 点亮 以Arduino Uno R3为例，板载LED和13号管脚连通。 我们可以使用以下程序点亮LED ```c void setup(){ pinMode(13, OUTPUT);//定义13号管脚为输出模式 } void loop(){ digitalWrite(13,HIGH);//13号管脚输出为高电平 } ``` 同理，我们可以将LED熄灭 ```c void setup(){ pinMode(13, OUTPUT); } void loop(){ digitalWrite(13,LOW);//13号管脚输出为低电平 } ``` ## 闪烁 ```c void setup(){ pinMode(13, OUTPUT);//定义13号管脚为输出模式 } void loop(){ digitalWrite(13,LOW);//13号管脚输出为低电平 delay(1000);//延时1000ms，即1s digitalWrite(13,HIGH);//13号管脚输出为高电平 delay(1000); } ``` ## 呼吸 板载的贴片LED无法实现此效果 采用PWM来让LED灯珠实现呼吸灯的效果 ### 连线 LED正极–电阻–3 LED负极–GND ### 程序 ```c void setup(){ pinMode(3, OUTPUT);//定义13号管脚为输出模式 } void loop(){ for (int i 0; i < 255; i i + (5)) {//for循环步长为5，控制明暗变化细腻程度 analogWrite(3, i);//13号管脚进行模拟输出 delay(20);//延时20ms，控制呼吸速率 } for (int i 255; i > 0; i i + ( 5)) { analogWrite(3, i); delay(20); } } ``` ## 跑马 这里使用三枚LED灯珠进行演示 ### 连线 2 3 4号管脚顺序接上三枚LED灯珠的正极 负极统一接到GND管脚 ### 程序 ```c void setup(){ for(int i 2;i< 4;i++) { pinMode(i, OUTPUT);//定义2 3 4号管脚为输出模式 } } void loop(){ for (int i 2; i < 4; i i + (1)) { pinMode(i, OUTPUT); digitalWrite(i,HIGH); delay(100); pinMode(i, OUTPUT); digitalWrite(i,LOW); } for (int i 4; i > 2; i i + ( 1)) { pinMode(i, OUTPUT); digitalWrite(i,HIGH); delay(100); pinMode(i, OUTPUT); digitalWrite(i,LOW); } } ``` 以上就是arduino控制led的一些基本用法了，搭配其他硬件或传感器可以实现更为丰富的效果"},"/arduino/LCD1602模块（带PCF8574T转接板）.html":{"title":"LCD1602模块（带PCF8574T转接板）","content":" title: LCD1602模块（带PCF8574T转接板） categories: Arduino # LCD1602模块（带PCF8574T转接板） ## 参数 显示容量为16 * 2个字符 VCC 模块供电5V GND 接地 SDA 数据接口 SCL 控制接口 ## 接线 SDA A4 SCL A5 ## 代码 ```c #include <Wire.h> #include <LiquidCrystal_I2C.h> //引用I2C库 LiquidCrystal_I2C mylcd(0x3f,16,2); //创捷液晶对象，设备地址为0x3f(一般为0x27或0x3f），16列2行 void setup(){ mylcd.init(); //初始化液晶屏 mylcd.backlight(); //打开液晶屏背光 } void loop(){ mylcd.setCursor(5 1, 2 1); //设置光标位置为第2行第5列 mylcd.print(\"1\"); //输出字符 1 delay(1000); //延时1秒 mylcd.clear(); //清屏 mylcd.setCursor(0, 0); //设置光标位置为第1行 mylcd.print(\"2\"); //输出字符 2 mylcd.setCursor(0, 1); //设置光标位置为第2行 mylcd.print(\"3\"); //输出字符 3 delay(2000); //延时2秒 mylcd.clear(); //清屏 } ``` ## 功能 LCD1602液晶屏在第二行第五列显示“1”，1秒后清屏并在第一行显示”2”，在第二行显示”3”，2秒后清屏. ## 参考 [1]"},"/arduino/index.html":{"title":"Arduino","content":" title: Arduino <html> <head> <meta http equiv \"refresh\" content \"0;url ./Arduino导航.html\"> </head> </html>"},"/arduino/RFID.html":{"title":"RFID","content":" title: RFID categories: Arduino # RFID 本文采用RFID RC522 ## 参数 VCC 模块供电3.3V GND 接地 ## 接线 SDA 10 SCK 13 MOSI 11 MISO 12 RST 9 ## 代码 ```c #include <SPI.h> #include <MFRC522.h> MFRC522 rfid(10, 9); String item; String MFRC522_ReadCardUID(MFRC522 *_name){ String _CardUID \"\"; for (byte _i 0; _i < _name >uid.size; _i++){ if(_name >uid.uidByte[_i] < 0x10) _CardUID + \"0\"; _CardUID + String(_name >uid.uidByte[_i], HEX); } return _CardUID; } boolean MFRC522_IsNewCard(MFRC522 *_name){ if(!_name >PICC_IsNewCardPresent()) return false; if(!_name >PICC_ReadCardSerial()) return false; return true; } void setup(){ Serial.begin(9600); SPI.begin(); rfid.PCD_Init(); item \"\"; } void loop(){ if(MFRC522_IsNewCard(&rfid)){ item MFRC522_ReadCardUID(&rfid); Serial.println(item); delay(500); rfid.PICC_HaltA(); rfid.PCD_StopCrypto1(); } } ``` ## 功能 刷卡后在串口显示器显示对应字符串"},"/arduino/HC-SR04超声波传感器模块.html":{"title":"HC-SR04超声波传感器模块","content":" title: HC SR04超声波传感器模块 categories: Arduino # HC SR04超声波传感器模块 ## 参数 量程 2 400cm VCC 模块供电5V GND 接地 Trig 触发信号输入 Echo 回响信号输入 ## 接线 Trig 2 Echo 3 ## 代码 ### 1 ```c float checkdistance_2_3() { digitalWrite(2, LOW); //给Trig发送一个低电平 delayMicroseconds(2); //等待2微秒 digitalWrite(2, HIGH); //给Trig发送一个高电平 delayMicroseconds(10); //等待10微秒 digitalWrite(2, LOW); //给Trig发送一个低电平 float distance pulseIn(3, HIGH) / 58.00; //检测脉冲信号宽度并换算成距离 delay(10); return distance; } void setup(){ Serial.begin(9600); pinMode(2, OUTPUT); pinMode(3, INPUT); } void loop(){ Serial.println(String(checkdistance_2_3()) + String(\"cm\")); //显示距离和单位\"cm\" delay(1000); } ``` ### 2 ```c // 设定SR04连接的Arduino引脚 const int TrigPin 2; const int EchoPin 3; float distance; void setup() { // 初始化串口通信及连接SR04的引脚 Serial.begin(9600); pinMode(TrigPin, OUTPUT); // 要检测引脚上输入的脉冲宽度，需要先设置为输入状态 pinMode(EchoPin, INPUT); Serial.println(\"Ultrasonic sensor:\"); } void loop() { // 产生一个10us的高脉冲去触发TrigPin digitalWrite(TrigPin, LOW); delayMicroseconds(2); digitalWrite(TrigPin, HIGH); delayMicroseconds(10); digitalWrite(TrigPin, LOW); // 检测脉冲宽度，并计算出距离 distance pulseIn(EchoPin, HIGH)/ 58.00; Serial.print(distance); Serial.print(\"cm\"); Serial.println(); delay(1000); } ``` ## 功能 串口输出模块所测距离 ## 参考 [1] [pulseIn() arduino.cn](https://wiki.arduino.cn/?file 003 高级输入输出/002 pulseIn) [2] [Mixly图形化编程控制Arduino 蓝牙模块 bilibili](https://www.bilibili.com/video/BV1NQ4y1T7AT?spm_id_from 333.999.0.0&vd_source dde32bebfaef8d434caff0e95a159459) [3] [【Arduino】168种传感器模块系列实验（58） SR04超声波测距... Arduino中文社区](https://www.arduino.cn/forum.php?mod viewthread&tid 89869&extra &authorid 61537&page 7)"},"/arduino/HX711模块.html":{"title":"HX711模块","content":" title: HX711模块 categories: Arduino # HX711模块 ## 参数 VCC 模块供电5V GND 接地 DT\t SCK\t E+\t E \t A+\t A \t B+\t B ## 接线 DT 3 SCK 2 ## 代码 ```c #include <Q2HX711.h> //引用HX711库 const byte hx711_data_pin 3; //data管脚3 const byte hx711_clock_pin 2; //时钟管脚2 Q2HX711 hx711(hx711_data_pin, hx711_clock_pin); void setup() { Serial.begin(9600); //串口波特率设置为9600 } void loop() { Serial.println(String((hx711.read()/1000.00 8280.22)*2.5)+String(\"g\")); //输出读取数据，参数请自行调整 delay(500); } ``` ## 功能 输出应变片所受压力（单位为g） ## 参考 [1]"},"/arduino/L298N电机驱动模块.html":{"title":"L298N电机驱动模块","content":" title: L298N电机驱动模块 categories: Arduino # L298N电机驱动模块 ## 参数 VCC 模块供电12V GND 接地 5V 模块对外输出5V，当板载5V使能端断开时为模块输入 ENA1 ENA2 使能端 控制电机输出 IN1 IN2 IN3 IN4 逻辑输入 OUT1 OUT2电机输出 此处仅讨论控制单个电机 ENAIN1IN2直流电机状态 000停止 100制动 101正转 110反转 111制动 ## 接线 ### 全速输出 IN1 2 IN2 3 ### PWN调速输出 IN1 2 IN2 3 ENA1 5 ## 代码 ### 直流电机 #### 全速输出 ```c //定义IO int input1 2; int input2 3; void setup() { //初始化各IO pinMode(input1,OUTPUT); pinMode(input2,OUTPUT); } void loop() { //forward 前进 digitalWrite(input1,HIGH); digitalWrite(input2,LOW); delay(1000); //stop 停止 digitalWrite(input1,LOW); digitalWrite(input2,LOW); delay(500); //back 后退 digitalWrite(input1,LOW); digitalWrite(input2,HIGH); delay(1000); } ``` #### PWN调速输出 ```c int IN1 2; int IN2 3; int ENA 5; unsigned long time 1200; //PWM调速 0 255 int value 128; void setup(){ //初始化各IO pinMode(IN1, OUTPUT); pinMode(IN2, OUTPUT); //电机方向 逻辑输入 digitalWrite(IN1, HIGH); digitalWrite(IN2, LOW); } void loop(){ analogWrite(ENA, value); delay(500); } ``` ### 步进电机 博主手上没有，所以没试。。。 ## 功能 驱动直流电机和步进电机 ## 参考 [1]"}}